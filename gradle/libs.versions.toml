[versions]
accompanist = "0.30.1"
androidx-activity = "1.7.1"
androidx-appcompat = "1.6.1"
androidx-browser = "1.5.0"
androidx-lifecycle = "2.6.1"
agp = "8.0.0"
anvil = "2.4.5"
coil = "2.3.0"
compose-animation = "1.4.2"
# Pre-release versions for testing Kotlin previews can be found here
# https://androidx.dev/storage/compose-compiler/repository
compose-compiler = "1.4.6"
composeCompilerKotlinVersion = "1.8.20"
compose-foundation = "1.4.2"
compose-material = "1.4.2"
compose-material3 = "1.1.0-rc01"
compose-runtime = "1.4.2"
compose-ui = "1.4.2"
compose-jb = "1.4.0"
compose-jb-kotlinVersion = "1.8.20"
compose-integration-constraintlayout = "1.0.1"
dagger = "2.45"
datastore = "1.1.0-alpha04"
dependencyAnalysisPlugin = "1.19.0"
detekt = "1.22.0"
dokka = "1.8.10"
jdk = "19"
kotlin = "1.8.20"
kotlinpoet = "1.13.0"
kotlinx-coroutines = "1.6.4"
ksp = "1.8.20-1.0.11"
ktfmt = "0.43"
leakcanary = "2.10"
material = "1.6.1"
material-composeThemeAdapter = "1.2.1"
mavenPublish = "0.25.2"
molecule = "0.9.0"
mosaic = "0.6.0"
moshi = "1.14.0"
moshix = "0.22.0"
okhttp = "5.0.0-alpha.11"
paparazzi = "1.2.0"
retrofit = "2.9.0"
robolectric = "4.10"
roborazzi = "1.1.0-alpha-3"
spotless = "6.18.0"
sqldelight = "2.0.0-alpha05"
turbine = "0.12.3"
versionsPlugin = "0.46.0"

[plugins]
agp-application = { id = "com.android.application", version.ref = "agp" }
anvil = { id = "com.squareup.anvil", version.ref = "anvil" }
compose = { id = "org.jetbrains.compose", version.ref = "compose-jb" }
dependencyAnalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysisPlugin" }
dependencyGuard = { id = "com.dropbox.dependency-guard", version = "0.4.3" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
## Here to trigger Renovate updates
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}
mavenPublish = { id = "com.vanniktech.maven.publish", version.ref = "mavenPublish" }
mosaic = { id = "com.jakewharton.mosaic", version.ref = "mosaic" }
moshiGradlePlugin = { id = "dev.zacsweers.moshix", version.ref = "moshix" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }
roborazzi = { id = "io.github.takahirom.roborazzi", version.ref = "roborazzi" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
versionsPlugin = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }

[libraries]
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
androidx-activity = { module = "androidx.activity:activity", version.ref = "androidx-activity" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-benchmark-macro-junit = "androidx.benchmark:benchmark-macro-junit4:1.2.0-alpha13"
androidx-browser = { module = "androidx.browser:browser", version.ref = "androidx-browser" }
####### Compose
# You must enable the SlackProperties.enableCompose property to use these.
androidx-compose-accompanist-appCompatThemeAdapter = { module = "com.google.accompanist:accompanist-appcompat-theme", version.ref = "accompanist" }
androidx-compose-accompanist-coil = { module = "com.google.accompanist:accompanist-coil", version.ref = "accompanist" }
androidx-compose-accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "accompanist" }
androidx-compose-accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
androidx-compose-accompanist-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist" }
androidx-compose-accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
androidx-compose-accompanist-placeholder = { module = "com.google.accompanist:accompanist-placeholder", version.ref = "accompanist" }
androidx-compose-accompanist-swiperefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
androidx-compose-accompanist-systemUi = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
androidx-compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose-animation" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version = "2023.04.01" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "compose-compiler" }
# Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose-foundation" }
androidx-compose-integration-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-compose-integration-constraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-integration-constraintlayout" }
androidx-compose-integration-materialThemeAdapter = { module = "com.google.android.material:compose-theme-adapter", version.ref = "material-composeThemeAdapter" }
androidx-compose-integration-rxjava3 = { module = "androidx.compose.runtime:runtime-rxjava3", version.ref = "compose-runtime" }
# Material design icons
androidx-compose-material-icons = { module = "androidx.compose.material:material-icons-core", version.ref = "compose-material" }
androidx-compose-material-iconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose-material" }
androidx-compose-material-material = { module = "androidx.compose.material:material", version.ref = "compose-material" }
androidx-compose-material-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
# Runtime artifact, must be manually applied.
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose-runtime" }
androidx-compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose-runtime" }
androidx-compose-runtime-rxjava3 = { module = "androidx.compose.runtime:runtime-rxjava3", version.ref = "compose-runtime" }
androidx-compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics", version.ref = "compose-ui" }
# UI Tests.
androidx-compose-ui-testing-junit = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose-ui" }
# Compose testing library that should be added as a debugImplementation dependency to add properties to the debug manifest necessary for testing an application
androidx-compose-ui-testing-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose-ui" }
androidx-compose-ui-text = { module = "androidx.compose.ui:ui-text", version.ref = "compose-ui" }
# Tooling support (Previews, etc.)
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui" }
androidx-compose-ui-tooling-data = { module = "androidx.compose.ui:ui-tooling-data", version.ref = "compose-ui" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui" }
androidx-compose-ui-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-ui" }
androidx-compose-ui-unit = { module = "androidx.compose.ui:ui-unit", version.ref = "compose-ui" }
androidx-compose-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "compose-ui" }
# Embed XML via view binding into Composables
androidx-compose-ui-viewBinding = { module = "androidx.compose.ui:ui-viewbinding", version.ref = "compose-ui" }

androidx-core = "androidx.core:core-ktx:1.10.0"

androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

androidx-lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewModel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
# Force a newer version of androidx.loader because Espresso depends on an old and wrong version of it
androidx-loader = "androidx.loader:loader:1.1.0"
androidx-profileinstaller = "androidx.profileinstaller:profileinstaller:1.3.0"
androidx-test-espresso-core = "androidx.test.espresso:espresso-core:3.5.1"
androidx-test-ext-junit = "androidx.test.ext:junit:1.1.5"
androidx-test-monitor = "androidx.test:monitor:1.6.1"
androidx-test-uiautomator = "androidx.test.uiautomator:uiautomator:2.3.0-alpha03"

anvil-annotations = { module = "com.squareup.anvil:annotations", version.ref = "anvil" }

autoService-annotations = { module = "com.google.auto.service:auto-service-annotations", version = "1.0.1" }
autoService-ksp = { module = "dev.zacsweers.autoservice:auto-service-ksp", version = "1.0.0" }

clikt = "com.github.ajalt.clikt:clikt:3.5.2"

coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-test = { module = "io.coil-kt:coil-test", version.ref = "coil" }

compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose-jb" }
compose-runtime-saveable = { module = "org.jetbrains.compose.runtime:runtime-saveable", version.ref = "compose-jb" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose-jb" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose-jb" }

coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
coroutines-rxjava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-rx3", version.ref = "kotlinx-coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }

detektPlugins-twitterCompose = "com.twitter.compose.rules:detekt:0.0.26"

desugarJdkLibs = "com.android.tools:desugar_jdk_libs:2.0.3"
jline = "org.jline:jline:3.23.0"
jsoup = "org.jsoup:jsoup:1.15.4"
junit = "junit:junit:4.13.2"
kotlinx-immutable = "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5"
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet"}
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet"}
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
# Only present to trigger automatic renovate updates
ktfmt = { module = "com.facebook:ktfmt", version.ref = "ktfmt" }
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
leakcanary-android-instrumentation = { module = "com.squareup.leakcanary:leakcanary-android-instrumentation", version.ref = "leakcanary" }
molecule-runtime = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okio = "com.squareup.okio:okio:3.3.0"
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converters-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-converters-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
robolectric = { module = "org.robolectric:robolectric", version.ref="robolectric" }

roborazzi = { module = "io.github.takahirom.roborazzi:roborazzi", version.ref = "roborazzi" }
roborazzi-rules = { module = "io.github.takahirom.roborazzi:roborazzi-junit-rule", version.ref = "roborazzi" }

rxjava = "io.reactivex.rxjava3:rxjava:3.1.6"

sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions-jvm", version.ref = "sqldelight" }
sqldelight-primitiveAdapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }

testing-espresso-core = "androidx.test.espresso:espresso-core:3.5.1"
# Robolectric/Espresso ship with an old and totally borked version of hamcrest dependency, force a newer one
testing-hamcrest = "org.hamcrest:hamcrest:2.2"
truth = "com.google.truth:truth:1.1.3"
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

[bundles]
androidx-activity = ["androidx-activity", "androidx-activity-ktx"]
compose-ui = ["androidx-compose-foundation", "androidx-compose-material-material", "androidx-compose-material-material3", "androidx-compose-ui-ui", "androidx-compose-ui-tooling-preview"]
