// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, macosArm64, macosX64, wasmJs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <circuit-root:circuit-foundation>
open annotation class com.slack.circuit.foundation/DelicateCircuitFoundationApi : kotlin/Annotation { // com.slack.circuit.foundation/DelicateCircuitFoundationApi|null[0]
    constructor <init>() // com.slack.circuit.foundation/DelicateCircuitFoundationApi.<init>|<init>(){}[0]
}

final enum class com.slack.circuit.foundation.animation/AnimatedNavEvent : kotlin/Enum<com.slack.circuit.foundation.animation/AnimatedNavEvent> { // com.slack.circuit.foundation.animation/AnimatedNavEvent|null[0]
    enum entry GoTo // com.slack.circuit.foundation.animation/AnimatedNavEvent.GoTo|null[0]
    enum entry Pop // com.slack.circuit.foundation.animation/AnimatedNavEvent.Pop|null[0]
    enum entry RootReset // com.slack.circuit.foundation.animation/AnimatedNavEvent.RootReset|null[0]

    final val entries // com.slack.circuit.foundation.animation/AnimatedNavEvent.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.slack.circuit.foundation.animation/AnimatedNavEvent> // com.slack.circuit.foundation.animation/AnimatedNavEvent.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): com.slack.circuit.foundation.animation/AnimatedNavEvent // com.slack.circuit.foundation.animation/AnimatedNavEvent.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.slack.circuit.foundation.animation/AnimatedNavEvent> // com.slack.circuit.foundation.animation/AnimatedNavEvent.values|values#static(){}[0]
}

abstract interface <#A: com.slack.circuit.backstack/NavArgument, #B: com.slack.circuit.foundation.animation/AnimatedNavState> com.slack.circuit.foundation.animation/AnimatedNavDecorator { // com.slack.circuit.foundation.animation/AnimatedNavDecorator|null[0]
    abstract fun (androidx.compose.animation/AnimatedContentScope).Decoration(#B, kotlin/Function3<#A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.slack.circuit.foundation.animation/AnimatedNavDecorator.Decoration|Decoration@androidx.compose.animation.AnimatedContentScope(1:1;kotlin.Function3<1:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
    abstract fun (androidx.compose.animation/AnimatedContentTransitionScope<com.slack.circuit.foundation.animation/AnimatedNavState>).transitionSpec(com.slack.circuit.foundation.animation/AnimatedNavEvent): androidx.compose.animation/ContentTransform // com.slack.circuit.foundation.animation/AnimatedNavDecorator.transitionSpec|transitionSpec@androidx.compose.animation.AnimatedContentTransitionScope<com.slack.circuit.foundation.animation.AnimatedNavState>(com.slack.circuit.foundation.animation.AnimatedNavEvent){}[0]
    abstract fun targetState(kotlinx.collections.immutable/ImmutableList<#A>, kotlin/Int): #B // com.slack.circuit.foundation.animation/AnimatedNavDecorator.targetState|targetState(kotlinx.collections.immutable.ImmutableList<1:0>;kotlin.Int){}[0]
    abstract fun updateTransition(kotlinx.collections.immutable/ImmutableList<#A>, kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.animation.core/Transition<#B> // com.slack.circuit.foundation.animation/AnimatedNavDecorator.updateTransition|updateTransition(kotlinx.collections.immutable.ImmutableList<1:0>;kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int){}[0]

    abstract interface Factory { // com.slack.circuit.foundation.animation/AnimatedNavDecorator.Factory|null[0]
        abstract fun <#A2: com.slack.circuit.backstack/NavArgument> create(): com.slack.circuit.foundation.animation/AnimatedNavDecorator<#A2, *> // com.slack.circuit.foundation.animation/AnimatedNavDecorator.Factory.create|create(){0ยง<com.slack.circuit.backstack.NavArgument>}[0]
    }
}

abstract interface <#A: com.slack.circuit.runtime/CircuitUiState> com.slack.circuit.foundation/NonPausablePresenter : com.slack.circuit.runtime.presenter/Presenter<#A> // com.slack.circuit.foundation/NonPausablePresenter|null[0]

abstract interface com.slack.circuit.foundation.animation/AnimatedNavState { // com.slack.circuit.foundation.animation/AnimatedNavState|null[0]
    abstract val backStackDepth // com.slack.circuit.foundation.animation/AnimatedNavState.backStackDepth|{}backStackDepth[0]
        abstract fun <get-backStackDepth>(): kotlin/Int // com.slack.circuit.foundation.animation/AnimatedNavState.backStackDepth.<get-backStackDepth>|<get-backStackDepth>(){}[0]
    abstract val rootScreen // com.slack.circuit.foundation.animation/AnimatedNavState.rootScreen|{}rootScreen[0]
        abstract fun <get-rootScreen>(): com.slack.circuit.runtime.screen/Screen // com.slack.circuit.foundation.animation/AnimatedNavState.rootScreen.<get-rootScreen>|<get-rootScreen>(){}[0]
    abstract val screen // com.slack.circuit.foundation.animation/AnimatedNavState.screen|{}screen[0]
        abstract fun <get-screen>(): com.slack.circuit.runtime.screen/Screen // com.slack.circuit.foundation.animation/AnimatedNavState.screen.<get-screen>|<get-screen>(){}[0]
}

abstract interface com.slack.circuit.foundation/EventListener { // com.slack.circuit.foundation/EventListener|null[0]
    open fun dispose() // com.slack.circuit.foundation/EventListener.dispose|dispose(){}[0]
    open fun onAfterCreatePresenter(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/Navigator, com.slack.circuit.runtime.presenter/Presenter<*>?, com.slack.circuit.runtime/CircuitContext) // com.slack.circuit.foundation/EventListener.onAfterCreatePresenter|onAfterCreatePresenter(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.Navigator;com.slack.circuit.runtime.presenter.Presenter<*>?;com.slack.circuit.runtime.CircuitContext){}[0]
    open fun onAfterCreateUi(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime.ui/Ui<*>?, com.slack.circuit.runtime/CircuitContext) // com.slack.circuit.foundation/EventListener.onAfterCreateUi|onAfterCreateUi(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.ui.Ui<*>?;com.slack.circuit.runtime.CircuitContext){}[0]
    open fun onBeforeCreatePresenter(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/Navigator, com.slack.circuit.runtime/CircuitContext) // com.slack.circuit.foundation/EventListener.onBeforeCreatePresenter|onBeforeCreatePresenter(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.Navigator;com.slack.circuit.runtime.CircuitContext){}[0]
    open fun onBeforeCreateUi(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/CircuitContext) // com.slack.circuit.foundation/EventListener.onBeforeCreateUi|onBeforeCreateUi(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.CircuitContext){}[0]
    open fun onDisposeContent() // com.slack.circuit.foundation/EventListener.onDisposeContent|onDisposeContent(){}[0]
    open fun onDisposePresent() // com.slack.circuit.foundation/EventListener.onDisposePresent|onDisposePresent(){}[0]
    open fun onStartContent() // com.slack.circuit.foundation/EventListener.onStartContent|onStartContent(){}[0]
    open fun onStartPresent() // com.slack.circuit.foundation/EventListener.onStartPresent|onStartPresent(){}[0]
    open fun onState(com.slack.circuit.runtime/CircuitUiState) // com.slack.circuit.foundation/EventListener.onState|onState(com.slack.circuit.runtime.CircuitUiState){}[0]
    open fun onUnavailableContent(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime.presenter/Presenter<*>?, com.slack.circuit.runtime.ui/Ui<*>?, com.slack.circuit.runtime/CircuitContext) // com.slack.circuit.foundation/EventListener.onUnavailableContent|onUnavailableContent(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.presenter.Presenter<*>?;com.slack.circuit.runtime.ui.Ui<*>?;com.slack.circuit.runtime.CircuitContext){}[0]
    open fun start() // com.slack.circuit.foundation/EventListener.start|start(){}[0]

    abstract fun interface Factory { // com.slack.circuit.foundation/EventListener.Factory|null[0]
        abstract fun create(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/CircuitContext): com.slack.circuit.foundation/EventListener // com.slack.circuit.foundation/EventListener.Factory.create|create(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.CircuitContext){}[0]
    }

    final object Companion { // com.slack.circuit.foundation/EventListener.Companion|null[0]
        final val NONE // com.slack.circuit.foundation/EventListener.Companion.NONE|{}NONE[0]
            final fun <get-NONE>(): com.slack.circuit.foundation/EventListener // com.slack.circuit.foundation/EventListener.Companion.NONE.<get-NONE>|<get-NONE>(){}[0]
    }
}

abstract interface com.slack.circuit.foundation/RecordLifecycle { // com.slack.circuit.foundation/RecordLifecycle|null[0]
    abstract val isActive // com.slack.circuit.foundation/RecordLifecycle.isActive|{}isActive[0]
        abstract fun <get-isActive>(): kotlin/Boolean // com.slack.circuit.foundation/RecordLifecycle.isActive.<get-isActive>|<get-isActive>(){}[0]
}

sealed interface com.slack.circuit.foundation/NavEvent : com.slack.circuit.runtime/CircuitUiEvent { // com.slack.circuit.foundation/NavEvent|null[0]
    final class GoTo : com.slack.circuit.foundation/NavEvent { // com.slack.circuit.foundation/NavEvent.GoTo|null[0]
        constructor <init>(com.slack.circuit.runtime.screen/Screen) // com.slack.circuit.foundation/NavEvent.GoTo.<init>|<init>(com.slack.circuit.runtime.screen.Screen){}[0]

        final val screen // com.slack.circuit.foundation/NavEvent.GoTo.screen|{}screen[0]
            final fun <get-screen>(): com.slack.circuit.runtime.screen/Screen // com.slack.circuit.foundation/NavEvent.GoTo.screen.<get-screen>|<get-screen>(){}[0]

        final fun component1(): com.slack.circuit.runtime.screen/Screen // com.slack.circuit.foundation/NavEvent.GoTo.component1|component1(){}[0]
        final fun copy(com.slack.circuit.runtime.screen/Screen = ...): com.slack.circuit.foundation/NavEvent.GoTo // com.slack.circuit.foundation/NavEvent.GoTo.copy|copy(com.slack.circuit.runtime.screen.Screen){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.slack.circuit.foundation/NavEvent.GoTo.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.slack.circuit.foundation/NavEvent.GoTo.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.slack.circuit.foundation/NavEvent.GoTo.toString|toString(){}[0]
    }

    final class Pop : com.slack.circuit.foundation/NavEvent { // com.slack.circuit.foundation/NavEvent.Pop|null[0]
        constructor <init>(com.slack.circuit.runtime.screen/PopResult? = ...) // com.slack.circuit.foundation/NavEvent.Pop.<init>|<init>(com.slack.circuit.runtime.screen.PopResult?){}[0]

        final val result // com.slack.circuit.foundation/NavEvent.Pop.result|{}result[0]
            final fun <get-result>(): com.slack.circuit.runtime.screen/PopResult? // com.slack.circuit.foundation/NavEvent.Pop.result.<get-result>|<get-result>(){}[0]

        final fun component1(): com.slack.circuit.runtime.screen/PopResult? // com.slack.circuit.foundation/NavEvent.Pop.component1|component1(){}[0]
        final fun copy(com.slack.circuit.runtime.screen/PopResult? = ...): com.slack.circuit.foundation/NavEvent.Pop // com.slack.circuit.foundation/NavEvent.Pop.copy|copy(com.slack.circuit.runtime.screen.PopResult?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.slack.circuit.foundation/NavEvent.Pop.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.slack.circuit.foundation/NavEvent.Pop.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.slack.circuit.foundation/NavEvent.Pop.toString|toString(){}[0]
    }

    final class ResetRoot : com.slack.circuit.foundation/NavEvent { // com.slack.circuit.foundation/NavEvent.ResetRoot|null[0]
        constructor <init>(com.slack.circuit.runtime.screen/Screen, kotlin/Boolean, kotlin/Boolean) // com.slack.circuit.foundation/NavEvent.ResetRoot.<init>|<init>(com.slack.circuit.runtime.screen.Screen;kotlin.Boolean;kotlin.Boolean){}[0]

        final val newRoot // com.slack.circuit.foundation/NavEvent.ResetRoot.newRoot|{}newRoot[0]
            final fun <get-newRoot>(): com.slack.circuit.runtime.screen/Screen // com.slack.circuit.foundation/NavEvent.ResetRoot.newRoot.<get-newRoot>|<get-newRoot>(){}[0]
        final val restoreState // com.slack.circuit.foundation/NavEvent.ResetRoot.restoreState|{}restoreState[0]
            final fun <get-restoreState>(): kotlin/Boolean // com.slack.circuit.foundation/NavEvent.ResetRoot.restoreState.<get-restoreState>|<get-restoreState>(){}[0]
        final val saveState // com.slack.circuit.foundation/NavEvent.ResetRoot.saveState|{}saveState[0]
            final fun <get-saveState>(): kotlin/Boolean // com.slack.circuit.foundation/NavEvent.ResetRoot.saveState.<get-saveState>|<get-saveState>(){}[0]

        final fun component1(): com.slack.circuit.runtime.screen/Screen // com.slack.circuit.foundation/NavEvent.ResetRoot.component1|component1(){}[0]
        final fun component2(): kotlin/Boolean // com.slack.circuit.foundation/NavEvent.ResetRoot.component2|component2(){}[0]
        final fun component3(): kotlin/Boolean // com.slack.circuit.foundation/NavEvent.ResetRoot.component3|component3(){}[0]
        final fun copy(com.slack.circuit.runtime.screen/Screen = ..., kotlin/Boolean = ..., kotlin/Boolean = ...): com.slack.circuit.foundation/NavEvent.ResetRoot // com.slack.circuit.foundation/NavEvent.ResetRoot.copy|copy(com.slack.circuit.runtime.screen.Screen;kotlin.Boolean;kotlin.Boolean){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.slack.circuit.foundation/NavEvent.ResetRoot.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.slack.circuit.foundation/NavEvent.ResetRoot.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.slack.circuit.foundation/NavEvent.ResetRoot.toString|toString(){}[0]
    }
}

final class <#A: com.slack.circuit.backstack/BackStack.Record> com.slack.circuit.foundation/ContentProviderState { // com.slack.circuit.foundation/ContentProviderState|null[0]
    constructor <init>(androidx.compose.runtime.saveable/SaveableStateHolder, com.slack.circuit.retained/RetainedStateHolder, com.slack.circuit.backstack/BackStack<#A>, com.slack.circuit.runtime/Navigator, com.slack.circuit.foundation/Circuit, kotlin/Function4<com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // com.slack.circuit.foundation/ContentProviderState.<init>|<init>(androidx.compose.runtime.saveable.SaveableStateHolder;com.slack.circuit.retained.RetainedStateHolder;com.slack.circuit.backstack.BackStack<1:0>;com.slack.circuit.runtime.Navigator;com.slack.circuit.foundation.Circuit;kotlin.Function4<com.slack.circuit.runtime.screen.Screen,androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.slack.circuit.foundation/ContentProviderState.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.slack.circuit.foundation/ContentProviderState.hashCode|hashCode(){}[0]
}

final class <#A: com.slack.circuit.backstack/BackStack.Record> com.slack.circuit.foundation/RecordContentProvider : com.slack.circuit.backstack/NavArgument { // com.slack.circuit.foundation/RecordContentProvider|null[0]
    constructor <init>(#A, kotlin/Function4<#A, com.slack.circuit.foundation/ContentProviderState<#A>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // com.slack.circuit.foundation/RecordContentProvider.<init>|<init>(1:0;kotlin.Function4<1:0,com.slack.circuit.foundation.ContentProviderState<1:0>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]

    final val record // com.slack.circuit.foundation/RecordContentProvider.record|{}record[0]
        final fun <get-record>(): #A // com.slack.circuit.foundation/RecordContentProvider.record.<get-record>|<get-record>(){}[0]
    final val screen // com.slack.circuit.foundation/RecordContentProvider.screen|{}screen[0]
        final fun <get-screen>(): com.slack.circuit.runtime.screen/Screen // com.slack.circuit.foundation/RecordContentProvider.screen.<get-screen>|<get-screen>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.slack.circuit.foundation/RecordContentProvider.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.slack.circuit.foundation/RecordContentProvider.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.slack.circuit.foundation/RecordContentProvider.toString|toString(){}[0]
}

final class com.slack.circuit.foundation.animation/AnimatedNavDecoration : com.slack.circuit.backstack/NavDecoration { // com.slack.circuit.foundation.animation/AnimatedNavDecoration|null[0]
    constructor <init>(kotlinx.collections.immutable/ImmutableMap<kotlin.reflect/KClass<out com.slack.circuit.runtime.screen/Screen>, com.slack.circuit.foundation.animation/AnimatedScreenTransform>, com.slack.circuit.foundation.animation/AnimatedNavDecorator.Factory) // com.slack.circuit.foundation.animation/AnimatedNavDecoration.<init>|<init>(kotlinx.collections.immutable.ImmutableMap<kotlin.reflect.KClass<out|com.slack.circuit.runtime.screen.Screen>,com.slack.circuit.foundation.animation.AnimatedScreenTransform>;com.slack.circuit.foundation.animation.AnimatedNavDecorator.Factory){}[0]

    final fun <#A1: com.slack.circuit.backstack/NavArgument> DecoratedContent(kotlinx.collections.immutable/ImmutableList<#A1>, kotlin/Int, androidx.compose.ui/Modifier, kotlin/Function3<#A1, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.slack.circuit.foundation.animation/AnimatedNavDecoration.DecoratedContent|DecoratedContent(kotlinx.collections.immutable.ImmutableList<0:0>;kotlin.Int;androidx.compose.ui.Modifier;kotlin.Function3<0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){0ยง<com.slack.circuit.backstack.NavArgument>}[0]
}

final class com.slack.circuit.foundation.animation/PartialContentTransform { // com.slack.circuit.foundation.animation/PartialContentTransform|null[0]
    constructor <init>(androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, kotlin/Float?, androidx.compose.animation/SizeTransform?) // com.slack.circuit.foundation.animation/PartialContentTransform.<init>|<init>(androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;kotlin.Float?;androidx.compose.animation.SizeTransform?){}[0]

    final val enter // com.slack.circuit.foundation.animation/PartialContentTransform.enter|{}enter[0]
        final fun <get-enter>(): androidx.compose.animation/EnterTransition? // com.slack.circuit.foundation.animation/PartialContentTransform.enter.<get-enter>|<get-enter>(){}[0]
    final val exit // com.slack.circuit.foundation.animation/PartialContentTransform.exit|{}exit[0]
        final fun <get-exit>(): androidx.compose.animation/ExitTransition? // com.slack.circuit.foundation.animation/PartialContentTransform.exit.<get-exit>|<get-exit>(){}[0]
    final val sizeTransform // com.slack.circuit.foundation.animation/PartialContentTransform.sizeTransform|{}sizeTransform[0]
        final fun <get-sizeTransform>(): androidx.compose.animation/SizeTransform? // com.slack.circuit.foundation.animation/PartialContentTransform.sizeTransform.<get-sizeTransform>|<get-sizeTransform>(){}[0]
    final val zIndex // com.slack.circuit.foundation.animation/PartialContentTransform.zIndex|{}zIndex[0]
        final fun <get-zIndex>(): kotlin/Float? // com.slack.circuit.foundation.animation/PartialContentTransform.zIndex.<get-zIndex>|<get-zIndex>(){}[0]

    final fun component1(): androidx.compose.animation/EnterTransition? // com.slack.circuit.foundation.animation/PartialContentTransform.component1|component1(){}[0]
    final fun component2(): androidx.compose.animation/ExitTransition? // com.slack.circuit.foundation.animation/PartialContentTransform.component2|component2(){}[0]
    final fun component3(): kotlin/Float? // com.slack.circuit.foundation.animation/PartialContentTransform.component3|component3(){}[0]
    final fun component4(): androidx.compose.animation/SizeTransform? // com.slack.circuit.foundation.animation/PartialContentTransform.component4|component4(){}[0]
    final fun copy(androidx.compose.animation/EnterTransition? = ..., androidx.compose.animation/ExitTransition? = ..., kotlin/Float? = ..., androidx.compose.animation/SizeTransform? = ...): com.slack.circuit.foundation.animation/PartialContentTransform // com.slack.circuit.foundation.animation/PartialContentTransform.copy|copy(androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;kotlin.Float?;androidx.compose.animation.SizeTransform?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.slack.circuit.foundation.animation/PartialContentTransform.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.slack.circuit.foundation.animation/PartialContentTransform.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.slack.circuit.foundation.animation/PartialContentTransform.toString|toString(){}[0]

    final class Builder { // com.slack.circuit.foundation.animation/PartialContentTransform.Builder|null[0]
        constructor <init>() // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.<init>|<init>(){}[0]

        final var enter // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.enter|{}enter[0]
            final fun <get-enter>(): androidx.compose.animation/EnterTransition? // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.enter.<get-enter>|<get-enter>(){}[0]
            final fun <set-enter>(androidx.compose.animation/EnterTransition?) // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.enter.<set-enter>|<set-enter>(androidx.compose.animation.EnterTransition?){}[0]
        final var exit // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.exit|{}exit[0]
            final fun <get-exit>(): androidx.compose.animation/ExitTransition? // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.exit.<get-exit>|<get-exit>(){}[0]
            final fun <set-exit>(androidx.compose.animation/ExitTransition?) // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.exit.<set-exit>|<set-exit>(androidx.compose.animation.ExitTransition?){}[0]
        final var sizeTransform // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.sizeTransform|{}sizeTransform[0]
            final fun <get-sizeTransform>(): androidx.compose.animation/SizeTransform? // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.sizeTransform.<get-sizeTransform>|<get-sizeTransform>(){}[0]
            final fun <set-sizeTransform>(androidx.compose.animation/SizeTransform?) // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.sizeTransform.<set-sizeTransform>|<set-sizeTransform>(androidx.compose.animation.SizeTransform?){}[0]
        final var zIndex // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.zIndex|{}zIndex[0]
            final fun <get-zIndex>(): kotlin/Float? // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.zIndex.<get-zIndex>|<get-zIndex>(){}[0]
            final fun <set-zIndex>(kotlin/Float?) // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.zIndex.<set-zIndex>|<set-zIndex>(kotlin.Float?){}[0]

        final fun build(): com.slack.circuit.foundation.animation/PartialContentTransform // com.slack.circuit.foundation.animation/PartialContentTransform.Builder.build|build(){}[0]
    }

    final object Companion { // com.slack.circuit.foundation.animation/PartialContentTransform.Companion|null[0]
        final val EMPTY // com.slack.circuit.foundation.animation/PartialContentTransform.Companion.EMPTY|{}EMPTY[0]
            final fun <get-EMPTY>(): com.slack.circuit.foundation.animation/PartialContentTransform // com.slack.circuit.foundation.animation/PartialContentTransform.Companion.EMPTY.<get-EMPTY>|<get-EMPTY>(){}[0]
    }
}

final class com.slack.circuit.foundation/Circuit { // com.slack.circuit.foundation/Circuit|null[0]
    final val animatedNavDecoratorFactory // com.slack.circuit.foundation/Circuit.animatedNavDecoratorFactory|{}animatedNavDecoratorFactory[0]
        final fun <get-animatedNavDecoratorFactory>(): com.slack.circuit.foundation.animation/AnimatedNavDecorator.Factory // com.slack.circuit.foundation/Circuit.animatedNavDecoratorFactory.<get-animatedNavDecoratorFactory>|<get-animatedNavDecoratorFactory>(){}[0]
    final val backStackLocalProviders // com.slack.circuit.foundation/Circuit.backStackLocalProviders|{}backStackLocalProviders[0]
        final fun <get-backStackLocalProviders>(): kotlinx.collections.immutable/ImmutableList<com.slack.circuit.backstack/BackStackRecordLocalProvider<com.slack.circuit.backstack/BackStack.Record>> // com.slack.circuit.foundation/Circuit.backStackLocalProviders.<get-backStackLocalProviders>|<get-backStackLocalProviders>(){}[0]
    final val defaultNavDecoration // com.slack.circuit.foundation/Circuit.defaultNavDecoration|{}defaultNavDecoration[0]
        final fun <get-defaultNavDecoration>(): com.slack.circuit.backstack/NavDecoration // com.slack.circuit.foundation/Circuit.defaultNavDecoration.<get-defaultNavDecoration>|<get-defaultNavDecoration>(){}[0]
    final val onUnavailableContent // com.slack.circuit.foundation/Circuit.onUnavailableContent|{}onUnavailableContent[0]
        final fun <get-onUnavailableContent>(): kotlin/Function4<com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit> // com.slack.circuit.foundation/Circuit.onUnavailableContent.<get-onUnavailableContent>|<get-onUnavailableContent>(){}[0]
    final val presentWithLifecycle // com.slack.circuit.foundation/Circuit.presentWithLifecycle|{}presentWithLifecycle[0]
        final fun <get-presentWithLifecycle>(): kotlin/Boolean // com.slack.circuit.foundation/Circuit.presentWithLifecycle.<get-presentWithLifecycle>|<get-presentWithLifecycle>(){}[0]

    final fun newBuilder(): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.newBuilder|newBuilder(){}[0]
    final fun nextPresenter(com.slack.circuit.runtime.presenter/Presenter.Factory?, com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/Navigator, com.slack.circuit.runtime/CircuitContext): com.slack.circuit.runtime.presenter/Presenter<*>? // com.slack.circuit.foundation/Circuit.nextPresenter|nextPresenter(com.slack.circuit.runtime.presenter.Presenter.Factory?;com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.Navigator;com.slack.circuit.runtime.CircuitContext){}[0]
    final fun nextUi(com.slack.circuit.runtime.ui/Ui.Factory?, com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/CircuitContext): com.slack.circuit.runtime.ui/Ui<*>? // com.slack.circuit.foundation/Circuit.nextUi|nextUi(com.slack.circuit.runtime.ui.Ui.Factory?;com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.CircuitContext){}[0]
    final fun presenter(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/Navigator, com.slack.circuit.runtime/CircuitContext = ...): com.slack.circuit.runtime.presenter/Presenter<*>? // com.slack.circuit.foundation/Circuit.presenter|presenter(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.Navigator;com.slack.circuit.runtime.CircuitContext){}[0]
    final fun ui(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/CircuitContext = ...): com.slack.circuit.runtime.ui/Ui<*>? // com.slack.circuit.foundation/Circuit.ui|ui(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.CircuitContext){}[0]

    final class Builder { // com.slack.circuit.foundation/Circuit.Builder|null[0]
        constructor <init>() // com.slack.circuit.foundation/Circuit.Builder.<init>|<init>(){}[0]

        final val backStackLocalProviders // com.slack.circuit.foundation/Circuit.Builder.backStackLocalProviders|{}backStackLocalProviders[0]
            final fun <get-backStackLocalProviders>(): kotlin.collections/MutableList<com.slack.circuit.backstack/BackStackRecordLocalProvider<com.slack.circuit.backstack/BackStack.Record>> // com.slack.circuit.foundation/Circuit.Builder.backStackLocalProviders.<get-backStackLocalProviders>|<get-backStackLocalProviders>(){}[0]
        final val presenterFactories // com.slack.circuit.foundation/Circuit.Builder.presenterFactories|{}presenterFactories[0]
            final fun <get-presenterFactories>(): kotlin.collections/MutableList<com.slack.circuit.runtime.presenter/Presenter.Factory> // com.slack.circuit.foundation/Circuit.Builder.presenterFactories.<get-presenterFactories>|<get-presenterFactories>(){}[0]
        final val uiFactories // com.slack.circuit.foundation/Circuit.Builder.uiFactories|{}uiFactories[0]
            final fun <get-uiFactories>(): kotlin.collections/MutableList<com.slack.circuit.runtime.ui/Ui.Factory> // com.slack.circuit.foundation/Circuit.Builder.uiFactories.<get-uiFactories>|<get-uiFactories>(){}[0]

        final var animatedNavDecoratorFactory // com.slack.circuit.foundation/Circuit.Builder.animatedNavDecoratorFactory|{}animatedNavDecoratorFactory[0]
            final fun <get-animatedNavDecoratorFactory>(): com.slack.circuit.foundation.animation/AnimatedNavDecorator.Factory // com.slack.circuit.foundation/Circuit.Builder.animatedNavDecoratorFactory.<get-animatedNavDecoratorFactory>|<get-animatedNavDecoratorFactory>(){}[0]
        final var defaultNavDecoration // com.slack.circuit.foundation/Circuit.Builder.defaultNavDecoration|{}defaultNavDecoration[0]
            final fun <get-defaultNavDecoration>(): com.slack.circuit.backstack/NavDecoration? // com.slack.circuit.foundation/Circuit.Builder.defaultNavDecoration.<get-defaultNavDecoration>|<get-defaultNavDecoration>(){}[0]
        final var eventListenerFactory // com.slack.circuit.foundation/Circuit.Builder.eventListenerFactory|{}eventListenerFactory[0]
            final fun <get-eventListenerFactory>(): com.slack.circuit.foundation/EventListener.Factory? // com.slack.circuit.foundation/Circuit.Builder.eventListenerFactory.<get-eventListenerFactory>|<get-eventListenerFactory>(){}[0]
        final var onUnavailableContent // com.slack.circuit.foundation/Circuit.Builder.onUnavailableContent|{}onUnavailableContent[0]
            final fun <get-onUnavailableContent>(): kotlin/Function4<com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit> // com.slack.circuit.foundation/Circuit.Builder.onUnavailableContent.<get-onUnavailableContent>|<get-onUnavailableContent>(){}[0]
        final var presentWithLifecycle // com.slack.circuit.foundation/Circuit.Builder.presentWithLifecycle|{}presentWithLifecycle[0]
            final fun <get-presentWithLifecycle>(): kotlin/Boolean // com.slack.circuit.foundation/Circuit.Builder.presentWithLifecycle.<get-presentWithLifecycle>|<get-presentWithLifecycle>(){}[0]

        final fun addBackStackRecordLocalProvider(com.slack.circuit.backstack/BackStackRecordLocalProvider<com.slack.circuit.backstack/BackStack.Record>): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addBackStackRecordLocalProvider|addBackStackRecordLocalProvider(com.slack.circuit.backstack.BackStackRecordLocalProvider<com.slack.circuit.backstack.BackStack.Record>){}[0]
        final fun addBackStackRecordLocalProvider(kotlin/Array<out com.slack.circuit.backstack/BackStackRecordLocalProvider<com.slack.circuit.backstack/BackStack.Record>>...): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addBackStackRecordLocalProvider|addBackStackRecordLocalProvider(kotlin.Array<out|com.slack.circuit.backstack.BackStackRecordLocalProvider<com.slack.circuit.backstack.BackStack.Record>>...){}[0]
        final fun addBackStackRecordLocalProviders(kotlin.collections/Iterable<com.slack.circuit.backstack/BackStackRecordLocalProvider<com.slack.circuit.backstack/BackStack.Record>>): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addBackStackRecordLocalProviders|addBackStackRecordLocalProviders(kotlin.collections.Iterable<com.slack.circuit.backstack.BackStackRecordLocalProvider<com.slack.circuit.backstack.BackStack.Record>>){}[0]
        final fun addPresenterFactories(kotlin.collections/Iterable<com.slack.circuit.runtime.presenter/Presenter.Factory>): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addPresenterFactories|addPresenterFactories(kotlin.collections.Iterable<com.slack.circuit.runtime.presenter.Presenter.Factory>){}[0]
        final fun addPresenterFactory(com.slack.circuit.runtime.presenter/Presenter.Factory): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addPresenterFactory|addPresenterFactory(com.slack.circuit.runtime.presenter.Presenter.Factory){}[0]
        final fun addPresenterFactory(kotlin/Array<out com.slack.circuit.runtime.presenter/Presenter.Factory>...): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addPresenterFactory|addPresenterFactory(kotlin.Array<out|com.slack.circuit.runtime.presenter.Presenter.Factory>...){}[0]
        final fun addUiFactories(kotlin.collections/Iterable<com.slack.circuit.runtime.ui/Ui.Factory>): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addUiFactories|addUiFactories(kotlin.collections.Iterable<com.slack.circuit.runtime.ui.Ui.Factory>){}[0]
        final fun addUiFactory(com.slack.circuit.runtime.ui/Ui.Factory): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addUiFactory|addUiFactory(com.slack.circuit.runtime.ui.Ui.Factory){}[0]
        final fun addUiFactory(kotlin/Array<out com.slack.circuit.runtime.ui/Ui.Factory>...): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addUiFactory|addUiFactory(kotlin.Array<out|com.slack.circuit.runtime.ui.Ui.Factory>...){}[0]
        final fun build(): com.slack.circuit.foundation/Circuit // com.slack.circuit.foundation/Circuit.Builder.build|build(){}[0]
        final fun clearBackStackRecordLocalProviders(): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.clearBackStackRecordLocalProviders|clearBackStackRecordLocalProviders(){}[0]
        final fun eventListenerFactory(com.slack.circuit.foundation/EventListener.Factory): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.eventListenerFactory|eventListenerFactory(com.slack.circuit.foundation.EventListener.Factory){}[0]
        final fun presentWithLifecycle(kotlin/Boolean = ...): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.presentWithLifecycle|presentWithLifecycle(kotlin.Boolean){}[0]
        final fun setAnimatedNavDecoratorFactory(com.slack.circuit.foundation.animation/AnimatedNavDecorator.Factory): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.setAnimatedNavDecoratorFactory|setAnimatedNavDecoratorFactory(com.slack.circuit.foundation.animation.AnimatedNavDecorator.Factory){}[0]
        final fun setDefaultNavDecoration(com.slack.circuit.backstack/NavDecoration?): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.setDefaultNavDecoration|setDefaultNavDecoration(com.slack.circuit.backstack.NavDecoration?){}[0]
        final fun setOnUnavailableContent(kotlin/Function4<com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.setOnUnavailableContent|setOnUnavailableContent(kotlin.Function4<com.slack.circuit.runtime.screen.Screen,androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
        final inline fun <#A2: reified com.slack.circuit.runtime.screen/Screen, #B2: com.slack.circuit.runtime/CircuitUiState> addPresenter(com.slack.circuit.runtime.presenter/Presenter<#B2>): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addPresenter|addPresenter(com.slack.circuit.runtime.presenter.Presenter<0:1>){0ยง<com.slack.circuit.runtime.screen.Screen>;1ยง<com.slack.circuit.runtime.CircuitUiState>}[0]
        final inline fun <#A2: reified com.slack.circuit.runtime.screen/Screen, #B2: com.slack.circuit.runtime/CircuitUiState> addPresenter(crossinline kotlin/Function3<#A2, com.slack.circuit.runtime/Navigator, com.slack.circuit.runtime/CircuitContext, com.slack.circuit.runtime.presenter/Presenter<#B2>>): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addPresenter|addPresenter(kotlin.Function3<0:0,com.slack.circuit.runtime.Navigator,com.slack.circuit.runtime.CircuitContext,com.slack.circuit.runtime.presenter.Presenter<0:1>>){0ยง<com.slack.circuit.runtime.screen.Screen>;1ยง<com.slack.circuit.runtime.CircuitUiState>}[0]
        final inline fun <#A2: reified com.slack.circuit.runtime.screen/Screen, #B2: com.slack.circuit.runtime/CircuitUiState> addStaticUi(crossinline kotlin/Function4<#A2, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addStaticUi|addStaticUi(kotlin.Function4<0:0,androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0ยง<com.slack.circuit.runtime.screen.Screen>;1ยง<com.slack.circuit.runtime.CircuitUiState>}[0]
        final inline fun <#A2: reified com.slack.circuit.runtime.screen/Screen, #B2: com.slack.circuit.runtime/CircuitUiState> addUi(crossinline kotlin/Function4<#B2, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>): com.slack.circuit.foundation/Circuit.Builder // com.slack.circuit.foundation/Circuit.Builder.addUi|addUi(kotlin.Function4<0:1,androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0ยง<com.slack.circuit.runtime.screen.Screen>;1ยง<com.slack.circuit.runtime.CircuitUiState>}[0]
    }
}

final object com.slack.circuit.foundation.backstack/ViewModelBackStackRecordLocalProvider : com.slack.circuit.backstack/BackStackRecordLocalProvider<com.slack.circuit.backstack/BackStack.Record> { // com.slack.circuit.foundation.backstack/ViewModelBackStackRecordLocalProvider|null[0]
    final fun providedValuesFor(com.slack.circuit.backstack/BackStack.Record, androidx.compose.runtime/Composer?, kotlin/Int): com.slack.circuit.backstack/ProvidedValues // com.slack.circuit.foundation.backstack/ViewModelBackStackRecordLocalProvider.providedValuesFor|providedValuesFor(com.slack.circuit.backstack.BackStack.Record;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

final object com.slack.circuit.foundation/NavigatorDefaults { // com.slack.circuit.foundation/NavigatorDefaults|null[0]
    final class <#A1: com.slack.circuit.backstack/NavArgument> DefaultDecorator : com.slack.circuit.foundation.animation/AnimatedNavDecorator<#A1, com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState<#A1>> { // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator|null[0]
        constructor <init>() // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.<init>|<init>(){}[0]

        final fun (androidx.compose.animation/AnimatedContentScope).Decoration(com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState<#A1>, kotlin/Function3<#A1, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.Decoration|Decoration@androidx.compose.animation.AnimatedContentScope(com.slack.circuit.foundation.NavigatorDefaults.DefaultDecorator.DefaultAnimatedState<1:0>;kotlin.Function3<1:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
        final fun (androidx.compose.animation/AnimatedContentTransitionScope<com.slack.circuit.foundation.animation/AnimatedNavState>).transitionSpec(com.slack.circuit.foundation.animation/AnimatedNavEvent): androidx.compose.animation/ContentTransform // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.transitionSpec|transitionSpec@androidx.compose.animation.AnimatedContentTransitionScope<com.slack.circuit.foundation.animation.AnimatedNavState>(com.slack.circuit.foundation.animation.AnimatedNavEvent){}[0]
        final fun targetState(kotlinx.collections.immutable/ImmutableList<#A1>, kotlin/Int): com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState<#A1> // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.targetState|targetState(kotlinx.collections.immutable.ImmutableList<1:0>;kotlin.Int){}[0]
        final fun updateTransition(kotlinx.collections.immutable/ImmutableList<#A1>, kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.animation.core/Transition<com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState<#A1>> // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.updateTransition|updateTransition(kotlinx.collections.immutable.ImmutableList<1:0>;kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int){}[0]

        final class <#A2: com.slack.circuit.backstack/NavArgument> DefaultAnimatedState : com.slack.circuit.foundation.animation/AnimatedNavState { // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState|null[0]
            constructor <init>(kotlinx.collections.immutable/ImmutableList<#A2>) // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.<init>|<init>(kotlinx.collections.immutable.ImmutableList<1:0>){}[0]

            final val args // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.args|{}args[0]
                final fun <get-args>(): kotlinx.collections.immutable/ImmutableList<#A2> // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.args.<get-args>|<get-args>(){}[0]
            final val backStackDepth // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.backStackDepth|{}backStackDepth[0]
                final fun <get-backStackDepth>(): kotlin/Int // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.backStackDepth.<get-backStackDepth>|<get-backStackDepth>(){}[0]
            final val rootScreen // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.rootScreen|{}rootScreen[0]
                final fun <get-rootScreen>(): com.slack.circuit.runtime.screen/Screen // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.rootScreen.<get-rootScreen>|<get-rootScreen>(){}[0]
            final val screen // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.screen|{}screen[0]
                final fun <get-screen>(): com.slack.circuit.runtime.screen/Screen // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.screen.<get-screen>|<get-screen>(){}[0]

            final fun component1(): kotlinx.collections.immutable/ImmutableList<#A2> // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.component1|component1(){}[0]
            final fun copy(kotlinx.collections.immutable/ImmutableList<#A2> = ...): com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState<#A2> // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.copy|copy(kotlinx.collections.immutable.ImmutableList<1:0>){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecorator.DefaultAnimatedState.toString|toString(){}[0]
        }
    }

    final object DefaultDecoratorFactory : com.slack.circuit.foundation.animation/AnimatedNavDecorator.Factory { // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecoratorFactory|null[0]
        final fun <#A2: com.slack.circuit.backstack/NavArgument> create(): com.slack.circuit.foundation.animation/AnimatedNavDecorator<#A2, *> // com.slack.circuit.foundation/NavigatorDefaults.DefaultDecoratorFactory.create|create(){0ยง<com.slack.circuit.backstack.NavArgument>}[0]
    }

    final object EmptyDecoration : com.slack.circuit.backstack/NavDecoration { // com.slack.circuit.foundation/NavigatorDefaults.EmptyDecoration|null[0]
        final fun <#A2: com.slack.circuit.backstack/NavArgument> DecoratedContent(kotlinx.collections.immutable/ImmutableList<#A2>, kotlin/Int, androidx.compose.ui/Modifier, kotlin/Function3<#A2, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.slack.circuit.foundation/NavigatorDefaults.EmptyDecoration.DecoratedContent|DecoratedContent(kotlinx.collections.immutable.ImmutableList<0:0>;kotlin.Int;androidx.compose.ui.Modifier;kotlin.Function3<0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){0ยง<com.slack.circuit.backstack.NavArgument>}[0]
    }
}

final val com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_AnimatedNavDecoration$stableprop // com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_AnimatedNavDecoration$stableprop|#static{}com_slack_circuit_foundation_animation_AnimatedNavDecoration$stableprop[0]
final val com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_NoOpAnimatedScreenTransform$stableprop // com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_NoOpAnimatedScreenTransform$stableprop|#static{}com_slack_circuit_foundation_animation_NoOpAnimatedScreenTransform$stableprop[0]
final val com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_PartialContentTransform$stableprop // com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_PartialContentTransform$stableprop|#static{}com_slack_circuit_foundation_animation_PartialContentTransform$stableprop[0]
final val com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_PartialContentTransform_Builder$stableprop // com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_PartialContentTransform_Builder$stableprop|#static{}com_slack_circuit_foundation_animation_PartialContentTransform_Builder$stableprop[0]
final val com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel$stableprop // com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel$stableprop|#static{}com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel$stableprop[0]
final val com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel_Factory$stableprop // com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel_Factory$stableprop|#static{}com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel_Factory$stableprop[0]
final val com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_ViewModelBackStackRecordLocalProvider$stableprop // com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_ViewModelBackStackRecordLocalProvider$stableprop|#static{}com_slack_circuit_foundation_backstack_ViewModelBackStackRecordLocalProvider$stableprop[0]
final val com.slack.circuit.foundation/LocalBackStack // com.slack.circuit.foundation/LocalBackStack|{}LocalBackStack[0]
    final fun <get-LocalBackStack>(): androidx.compose.runtime/ProvidableCompositionLocal<com.slack.circuit.backstack/BackStack<out com.slack.circuit.backstack/BackStack.Record>?> // com.slack.circuit.foundation/LocalBackStack.<get-LocalBackStack>|<get-LocalBackStack>(){}[0]
final val com.slack.circuit.foundation/LocalCircuit // com.slack.circuit.foundation/LocalCircuit|{}LocalCircuit[0]
    final fun <get-LocalCircuit>(): androidx.compose.runtime/ProvidableCompositionLocal<com.slack.circuit.foundation/Circuit?> // com.slack.circuit.foundation/LocalCircuit.<get-LocalCircuit>|<get-LocalCircuit>(){}[0]
final val com.slack.circuit.foundation/LocalRecordLifecycle // com.slack.circuit.foundation/LocalRecordLifecycle|{}LocalRecordLifecycle[0]
    final fun <get-LocalRecordLifecycle>(): androidx.compose.runtime/ProvidableCompositionLocal<com.slack.circuit.foundation/RecordLifecycle> // com.slack.circuit.foundation/LocalRecordLifecycle.<get-LocalRecordLifecycle>|<get-LocalRecordLifecycle>(){}[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_Circuit$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_Circuit$stableprop|#static{}com_slack_circuit_foundation_Circuit$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_Circuit_Builder$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_Circuit_Builder$stableprop|#static{}com_slack_circuit_foundation_Circuit_Builder$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_ContentProviderState$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_ContentProviderState$stableprop|#static{}com_slack_circuit_foundation_ContentProviderState$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_MutableRecordLifecycle$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_MutableRecordLifecycle$stableprop|#static{}com_slack_circuit_foundation_MutableRecordLifecycle$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_MutableRef$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_MutableRef$stableprop|#static{}com_slack_circuit_foundation_MutableRef$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_GoTo$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_GoTo$stableprop|#static{}com_slack_circuit_foundation_NavEvent_GoTo$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_Pop$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_Pop$stableprop|#static{}com_slack_circuit_foundation_NavEvent_Pop$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_ResetRoot$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_ResetRoot$stableprop|#static{}com_slack_circuit_foundation_NavEvent_ResetRoot$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults$stableprop|#static{}com_slack_circuit_foundation_NavigatorDefaults$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator$stableprop|#static{}com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecoratorFactory$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecoratorFactory$stableprop|#static{}com_slack_circuit_foundation_NavigatorDefaults_DefaultDecoratorFactory$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator_DefaultAnimatedState$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator_DefaultAnimatedState$stableprop|#static{}com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator_DefaultAnimatedState$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_EmptyDecoration$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_EmptyDecoration$stableprop|#static{}com_slack_circuit_foundation_NavigatorDefaults_EmptyDecoration$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorImpl$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorImpl$stableprop|#static{}com_slack_circuit_foundation_NavigatorImpl$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_RecordContentProvider$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_RecordContentProvider$stableprop|#static{}com_slack_circuit_foundation_RecordContentProvider$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_StatelessUiState$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_StatelessUiState$stableprop|#static{}com_slack_circuit_foundation_StatelessUiState$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_StaticPresenter$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_StaticPresenter$stableprop|#static{}com_slack_circuit_foundation_StaticPresenter$stableprop[0]
final val com.slack.circuit.foundation/com_slack_circuit_foundation_StaticUi$stableprop // com.slack.circuit.foundation/com_slack_circuit_foundation_StaticUi$stableprop|#static{}com_slack_circuit_foundation_StaticUi$stableprop[0]

final var com.slack.circuit.foundation/circuit // com.slack.circuit.foundation/circuit|@com.slack.circuit.runtime.CircuitContext{}circuit[0]
    final fun (com.slack.circuit.runtime/CircuitContext).<get-circuit>(): com.slack.circuit.foundation/Circuit // com.slack.circuit.foundation/circuit.<get-circuit>|<get-circuit>@com.slack.circuit.runtime.CircuitContext(){}[0]
    final fun (com.slack.circuit.runtime/CircuitContext).<set-circuit>(com.slack.circuit.foundation/Circuit) // com.slack.circuit.foundation/circuit.<set-circuit>|<set-circuit>@com.slack.circuit.runtime.CircuitContext(com.slack.circuit.foundation.Circuit){}[0]
final var com.slack.circuit.foundation/config // com.slack.circuit.foundation/config|@com.slack.circuit.runtime.CircuitContext{}config[0]
    final fun (com.slack.circuit.runtime/CircuitContext).<get-config>(): com.slack.circuit.foundation/Circuit // com.slack.circuit.foundation/config.<get-config>|<get-config>@com.slack.circuit.runtime.CircuitContext(){}[0]
    final fun (com.slack.circuit.runtime/CircuitContext).<set-config>(com.slack.circuit.foundation/Circuit) // com.slack.circuit.foundation/config.<set-config>|<set-config>@com.slack.circuit.runtime.CircuitContext(com.slack.circuit.foundation.Circuit){}[0]

final fun (androidx.compose.animation/ContentTransform).com.slack.circuit.foundation.animation/asPartialContentTransform(): com.slack.circuit.foundation.animation/PartialContentTransform // com.slack.circuit.foundation.animation/asPartialContentTransform|asPartialContentTransform@androidx.compose.animation.ContentTransform(){}[0]
final fun (com.slack.circuit.runtime/Navigator).com.slack.circuit.foundation/onNavEvent(com.slack.circuit.foundation/NavEvent) // com.slack.circuit.foundation/onNavEvent|onNavEvent@com.slack.circuit.runtime.Navigator(com.slack.circuit.foundation.NavEvent){}[0]
final fun <#A: com.slack.circuit.backstack/BackStack.Record> com.slack.circuit.foundation/NavigableCircuitContent(com.slack.circuit.runtime/Navigator, com.slack.circuit.backstack/BackStack<#A>, androidx.compose.ui/Modifier?, com.slack.circuit.foundation/Circuit?, kotlinx.collections.immutable/ImmutableMap<out com.slack.circuit.backstack/BackStack.Record, com.slack.circuit.backstack/ProvidedValues>?, com.slack.circuit.backstack/NavDecoration?, com.slack.circuit.foundation.animation/AnimatedNavDecorator.Factory?, kotlin/Function4<com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.slack.circuit.foundation/NavigableCircuitContent|NavigableCircuitContent(com.slack.circuit.runtime.Navigator;com.slack.circuit.backstack.BackStack<0:0>;androidx.compose.ui.Modifier?;com.slack.circuit.foundation.Circuit?;kotlinx.collections.immutable.ImmutableMap<out|com.slack.circuit.backstack.BackStack.Record,com.slack.circuit.backstack.ProvidedValues>?;com.slack.circuit.backstack.NavDecoration?;com.slack.circuit.foundation.animation.AnimatedNavDecorator.Factory?;kotlin.Function4<com.slack.circuit.runtime.screen.Screen,androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<com.slack.circuit.backstack.BackStack.Record>}[0]
final fun <#A: com.slack.circuit.runtime.screen/PopResult> com.slack.circuit.foundation/rememberAnsweringNavigator(com.slack.circuit.backstack/BackStack<out com.slack.circuit.backstack/BackStack.Record>, kotlin.reflect/KClass<#A>, kotlin.coroutines/SuspendFunction2<kotlinx.coroutines/CoroutineScope, #A, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int): com.slack.circuit.runtime/GoToNavigator // com.slack.circuit.foundation/rememberAnsweringNavigator|rememberAnsweringNavigator(com.slack.circuit.backstack.BackStack<out|com.slack.circuit.backstack.BackStack.Record>;kotlin.reflect.KClass<0:0>;kotlin.coroutines.SuspendFunction2<kotlinx.coroutines.CoroutineScope,0:0,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){0ยง<com.slack.circuit.runtime.screen.PopResult>}[0]
final fun <#A: com.slack.circuit.runtime.screen/PopResult> com.slack.circuit.foundation/rememberAnsweringNavigator(com.slack.circuit.runtime/Navigator, kotlin.reflect/KClass<#A>, kotlin.coroutines/SuspendFunction2<kotlinx.coroutines/CoroutineScope, #A, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int): com.slack.circuit.runtime/GoToNavigator // com.slack.circuit.foundation/rememberAnsweringNavigator|rememberAnsweringNavigator(com.slack.circuit.runtime.Navigator;kotlin.reflect.KClass<0:0>;kotlin.coroutines.SuspendFunction2<kotlinx.coroutines.CoroutineScope,0:0,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){0ยง<com.slack.circuit.runtime.screen.PopResult>}[0]
final fun <#A: com.slack.circuit.runtime/CircuitUiState> com.slack.circuit.foundation/CircuitContent(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime.presenter/Presenter<#A>, com.slack.circuit.runtime.ui/Ui<#A>, androidx.compose.ui/Modifier?, com.slack.circuit.foundation/EventListener?, kotlin/Any?, kotlin/Boolean, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.slack.circuit.foundation/CircuitContent|CircuitContent(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.presenter.Presenter<0:0>;com.slack.circuit.runtime.ui.Ui<0:0>;androidx.compose.ui.Modifier?;com.slack.circuit.foundation.EventListener?;kotlin.Any?;kotlin.Boolean;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<com.slack.circuit.runtime.CircuitUiState>}[0]
final fun <#A: kotlin/Any?> com.slack.circuit.foundation/pausableState(kotlin/String?, kotlin/Boolean, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, #A>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): #A // com.slack.circuit.foundation/pausableState|pausableState(kotlin.String?;kotlin.Boolean;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,0:0>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}[0]
final fun com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_AnimatedNavDecoration$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_AnimatedNavDecoration$stableprop_getter|com_slack_circuit_foundation_animation_AnimatedNavDecoration$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_NoOpAnimatedScreenTransform$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_NoOpAnimatedScreenTransform$stableprop_getter|com_slack_circuit_foundation_animation_NoOpAnimatedScreenTransform$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_PartialContentTransform$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_PartialContentTransform$stableprop_getter|com_slack_circuit_foundation_animation_PartialContentTransform$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_PartialContentTransform_Builder$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation.animation/com_slack_circuit_foundation_animation_PartialContentTransform_Builder$stableprop_getter|com_slack_circuit_foundation_animation_PartialContentTransform_Builder$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation.backstack/backStackHostViewModelStoreOwner(androidx.compose.runtime/Composer?, kotlin/Int): androidx.lifecycle/ViewModelStoreOwner? // com.slack.circuit.foundation.backstack/backStackHostViewModelStoreOwner|backStackHostViewModelStoreOwner(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel$stableprop_getter|com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel_Factory$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel_Factory$stableprop_getter|com_slack_circuit_foundation_backstack_BackStackRecordLocalProviderViewModel_Factory$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_ViewModelBackStackRecordLocalProvider$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation.backstack/com_slack_circuit_foundation_backstack_ViewModelBackStackRecordLocalProvider$stableprop_getter|com_slack_circuit_foundation_backstack_ViewModelBackStackRecordLocalProvider$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/CircuitCompositionLocals(com.slack.circuit.foundation/Circuit, com.slack.circuit.retained/RetainedStateRegistry?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.slack.circuit.foundation/CircuitCompositionLocals|CircuitCompositionLocals(com.slack.circuit.foundation.Circuit;com.slack.circuit.retained.RetainedStateRegistry?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.slack.circuit.foundation/CircuitContent(com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier?, com.slack.circuit.foundation/Circuit?, kotlin/Function4<com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Any?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.slack.circuit.foundation/CircuitContent|CircuitContent(com.slack.circuit.runtime.screen.Screen;androidx.compose.ui.Modifier?;com.slack.circuit.foundation.Circuit?;kotlin.Function4<com.slack.circuit.runtime.screen.Screen,androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Any?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.slack.circuit.foundation/CircuitContent(com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier?, kotlin/Function1<com.slack.circuit.foundation/NavEvent, kotlin/Unit>, com.slack.circuit.foundation/Circuit?, kotlin/Function4<com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Any?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.slack.circuit.foundation/CircuitContent|CircuitContent(com.slack.circuit.runtime.screen.Screen;androidx.compose.ui.Modifier?;kotlin.Function1<com.slack.circuit.foundation.NavEvent,kotlin.Unit>;com.slack.circuit.foundation.Circuit?;kotlin.Function4<com.slack.circuit.runtime.screen.Screen,androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Any?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.slack.circuit.foundation/CircuitContent(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/Navigator, androidx.compose.ui/Modifier?, com.slack.circuit.foundation/Circuit?, kotlin/Function4<com.slack.circuit.runtime.screen/Screen, androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Any?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.slack.circuit.foundation/CircuitContent|CircuitContent(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.Navigator;androidx.compose.ui.Modifier?;com.slack.circuit.foundation.Circuit?;kotlin.Function4<com.slack.circuit.runtime.screen.Screen,androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Any?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.slack.circuit.foundation/CircuitPreview(kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.slack.circuit.foundation/CircuitPreview|CircuitPreview(kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun com.slack.circuit.foundation/Navigator(com.slack.circuit.backstack/BackStack<out com.slack.circuit.backstack/BackStack.Record>, kotlin/Function1<com.slack.circuit.runtime.screen/PopResult?, kotlin/Unit>): com.slack.circuit.runtime/Navigator // com.slack.circuit.foundation/Navigator|Navigator(com.slack.circuit.backstack.BackStack<out|com.slack.circuit.backstack.BackStack.Record>;kotlin.Function1<com.slack.circuit.runtime.screen.PopResult?,kotlin.Unit>){}[0]
final fun com.slack.circuit.foundation/answeringNavigationAvailable(androidx.compose.runtime/Composer?, kotlin/Int): kotlin/Boolean // com.slack.circuit.foundation/answeringNavigationAvailable|answeringNavigationAvailable(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_Circuit$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_Circuit$stableprop_getter|com_slack_circuit_foundation_Circuit$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_Circuit_Builder$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_Circuit_Builder$stableprop_getter|com_slack_circuit_foundation_Circuit_Builder$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_ContentProviderState$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_ContentProviderState$stableprop_getter|com_slack_circuit_foundation_ContentProviderState$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_MutableRecordLifecycle$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_MutableRecordLifecycle$stableprop_getter|com_slack_circuit_foundation_MutableRecordLifecycle$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_MutableRef$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_MutableRef$stableprop_getter|com_slack_circuit_foundation_MutableRef$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_GoTo$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_GoTo$stableprop_getter|com_slack_circuit_foundation_NavEvent_GoTo$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_Pop$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_Pop$stableprop_getter|com_slack_circuit_foundation_NavEvent_Pop$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_ResetRoot$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_NavEvent_ResetRoot$stableprop_getter|com_slack_circuit_foundation_NavEvent_ResetRoot$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults$stableprop_getter|com_slack_circuit_foundation_NavigatorDefaults$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator$stableprop_getter|com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecoratorFactory$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecoratorFactory$stableprop_getter|com_slack_circuit_foundation_NavigatorDefaults_DefaultDecoratorFactory$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator_DefaultAnimatedState$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator_DefaultAnimatedState$stableprop_getter|com_slack_circuit_foundation_NavigatorDefaults_DefaultDecorator_DefaultAnimatedState$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_EmptyDecoration$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorDefaults_EmptyDecoration$stableprop_getter|com_slack_circuit_foundation_NavigatorDefaults_EmptyDecoration$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorImpl$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_NavigatorImpl$stableprop_getter|com_slack_circuit_foundation_NavigatorImpl$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_RecordContentProvider$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_RecordContentProvider$stableprop_getter|com_slack_circuit_foundation_RecordContentProvider$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_StatelessUiState$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_StatelessUiState$stableprop_getter|com_slack_circuit_foundation_StatelessUiState$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_StaticPresenter$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_StaticPresenter$stableprop_getter|com_slack_circuit_foundation_StaticPresenter$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/com_slack_circuit_foundation_StaticUi$stableprop_getter(): kotlin/Int // com.slack.circuit.foundation/com_slack_circuit_foundation_StaticUi$stableprop_getter|com_slack_circuit_foundation_StaticUi$stableprop_getter(){}[0]
final fun com.slack.circuit.foundation/rememberCircuitNavigator(com.slack.circuit.backstack/BackStack<out com.slack.circuit.backstack/BackStack.Record>, kotlin/Function1<com.slack.circuit.runtime.screen/PopResult?, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int): com.slack.circuit.runtime/Navigator // com.slack.circuit.foundation/rememberCircuitNavigator|rememberCircuitNavigator(com.slack.circuit.backstack.BackStack<out|com.slack.circuit.backstack.BackStack.Record>;kotlin.Function1<com.slack.circuit.runtime.screen.PopResult?,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun com.slack.circuit.foundation/rememberCircuitNavigator(com.slack.circuit.backstack/BackStack<out com.slack.circuit.backstack/BackStack.Record>, kotlin/Function1<com.slack.circuit.runtime.screen/PopResult?, kotlin/Unit>, kotlin/Boolean, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): com.slack.circuit.runtime/Navigator // com.slack.circuit.foundation/rememberCircuitNavigator|rememberCircuitNavigator(com.slack.circuit.backstack.BackStack<out|com.slack.circuit.backstack.BackStack.Record>;kotlin.Function1<com.slack.circuit.runtime.screen.PopResult?,kotlin.Unit>;kotlin.Boolean;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final inline fun <#A: com.slack.circuit.runtime/CircuitUiState> (com.slack.circuit.runtime.presenter/Presenter<#A>).com.slack.circuit.foundation/presentWithLifecycle(kotlin/String?, kotlin/Boolean, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): #A // com.slack.circuit.foundation/presentWithLifecycle|presentWithLifecycle@com.slack.circuit.runtime.presenter.Presenter<0:0>(kotlin.String?;kotlin.Boolean;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<com.slack.circuit.runtime.CircuitUiState>}[0]
final inline fun <#A: reified androidx.lifecycle/ViewModel> com.slack.circuit.foundation.backstack/backStackHostViewModel(androidx.lifecycle/ViewModelStoreOwner?, kotlin/String?, androidx.lifecycle/ViewModelProvider.Factory?, androidx.lifecycle.viewmodel/CreationExtras?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): #A // com.slack.circuit.foundation.backstack/backStackHostViewModel|backStackHostViewModel(androidx.lifecycle.ViewModelStoreOwner?;kotlin.String?;androidx.lifecycle.ViewModelProvider.Factory?;androidx.lifecycle.viewmodel.CreationExtras?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<androidx.lifecycle.ViewModel>}[0]
final inline fun <#A: reified com.slack.circuit.runtime.screen/PopResult> com.slack.circuit.foundation/rememberAnsweringNavigator(com.slack.circuit.backstack/BackStack<out com.slack.circuit.backstack/BackStack.Record>, noinline kotlin.coroutines/SuspendFunction2<kotlinx.coroutines/CoroutineScope, #A, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int): com.slack.circuit.runtime/GoToNavigator // com.slack.circuit.foundation/rememberAnsweringNavigator|rememberAnsweringNavigator(com.slack.circuit.backstack.BackStack<out|com.slack.circuit.backstack.BackStack.Record>;kotlin.coroutines.SuspendFunction2<kotlinx.coroutines.CoroutineScope,0:0,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){0ยง<com.slack.circuit.runtime.screen.PopResult>}[0]
final inline fun <#A: reified com.slack.circuit.runtime.screen/PopResult> com.slack.circuit.foundation/rememberAnsweringNavigator(com.slack.circuit.runtime/Navigator, noinline kotlin.coroutines/SuspendFunction2<kotlinx.coroutines/CoroutineScope, #A, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int): com.slack.circuit.runtime/GoToNavigator // com.slack.circuit.foundation/rememberAnsweringNavigator|rememberAnsweringNavigator(com.slack.circuit.runtime.Navigator;kotlin.coroutines.SuspendFunction2<kotlinx.coroutines.CoroutineScope,0:0,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){0ยง<com.slack.circuit.runtime.screen.PopResult>}[0]
final inline fun com.slack.circuit.foundation/rememberEventListener(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/CircuitContext?, kotlin/Boolean, com.slack.circuit.foundation/EventListener.Factory?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): com.slack.circuit.foundation/EventListener // com.slack.circuit.foundation/rememberEventListener|rememberEventListener(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.CircuitContext?;kotlin.Boolean;com.slack.circuit.foundation.EventListener.Factory?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final inline fun com.slack.circuit.foundation/rememberPresenter(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/Navigator?, com.slack.circuit.runtime/CircuitContext?, com.slack.circuit.foundation/EventListener?, com.slack.circuit.runtime.presenter/Presenter.Factory, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): com.slack.circuit.runtime.presenter/Presenter<com.slack.circuit.runtime/CircuitUiState>? // com.slack.circuit.foundation/rememberPresenter|rememberPresenter(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.Navigator?;com.slack.circuit.runtime.CircuitContext?;com.slack.circuit.foundation.EventListener?;com.slack.circuit.runtime.presenter.Presenter.Factory;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final inline fun com.slack.circuit.foundation/rememberUi(com.slack.circuit.runtime.screen/Screen, com.slack.circuit.runtime/CircuitContext?, com.slack.circuit.foundation/EventListener?, com.slack.circuit.runtime.ui/Ui.Factory, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): com.slack.circuit.runtime.ui/Ui<com.slack.circuit.runtime/CircuitUiState>? // com.slack.circuit.foundation/rememberUi|rememberUi(com.slack.circuit.runtime.screen.Screen;com.slack.circuit.runtime.CircuitContext?;com.slack.circuit.foundation.EventListener?;com.slack.circuit.runtime.ui.Ui.Factory;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
