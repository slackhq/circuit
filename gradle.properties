org.gradle.jvmargs=-Xms1g -Xmx4g -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError \
  --add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED \
  --add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
  --add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED \
  --add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED \
  --add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED \
  --add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
  --add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED \
  --add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED \
  --add-opens=java.base/java.io=ALL-UNNAMED \
  --add-opens=java.base/java.util=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED

android.useAndroidX=true

# Force use of the latest android lint version
android.experimental.lint.version=8.3.0-alpha07

# Suppress warnings about experimental AGP properties we're using
# Ironically, this property itself is also experimental, so we have to suppress it too.
android.suppressUnsupportedOptionWarnings=android.suppressUnsupportedOptionWarnings,\
  android.experimental.testOptions.emulatorSnapshots.maxSnapshotsForTestFailures,\
  android.experimental.lint.version

org.gradle.parallel=true
org.gradle.configureondemand=true
org.gradle.caching=true
org.gradle.configuration-cache=true

# Disable noisy DAGP stability warning
dependency.analysis.compatibility=NONE

# Disable noisy stability warning
kotlin.mpp.stability.nowarn=true
kotlin.mpp.androidSourceSetLayoutVersion=2
kotlin.mpp.androidGradlePluginCompatibility.nowarn=true
# Ignore disabled targets (i.e iOS on Linux)
kotlin.native.ignoreDisabledTargets=true

# https://kotlinlang.org/docs/ksp-multiplatform.html#avoid-the-ksp-configuration-on-ksp-1-0-1
systemProp.allowAllTargetConfiguration=false

# Enable for Compose iOS
org.jetbrains.compose.experimental.uikit.enabled=true
# Enable for Compose Web
org.jetbrains.compose.experimental.jscanvas.enabled=true

# New Kotlin IC flags
kotlin.compiler.suppressExperimentalICOptimizationsWarning=true
kotlin.compiler.keepIncrementalCompilationCachesInMemory=true
kotlin.compiler.preciseCompilationResultsBackup=true

android.suppressUnsupportedCompileSdk=34

# Sometimes we build against JB's compose compiler and sometimes Google's, whichever has
# better support for the kotlin version we're on. Mostly just for testing new kotlin releases.
# NOTE releases must always be with the JB compiler for better native support
circuit.forceAndroidXComposeCompiler=false

# Versioning bits
GROUP=com.slack.circuit
POM_URL=https://github.com/slackhq/circuit/
POM_SCM_URL=https://github.com/slackhq/circuit/
POM_SCM_CONNECTION=scm:git:git://github.com/slackhq/circuit.git
POM_SCM_DEV_CONNECTION=scm:git:ssh://git@github.com/slackhq/circuit.git
POM_LICENCE_NAME=Apache-2.0
POM_LICENCE_URL=https://www.apache.org/licenses/LICENSE-2.0.txt
POM_LICENCE_DIST=repo
POM_DEVELOPER_ID=slackhq
POM_DEVELOPER_NAME=Slack Technologies, Inc.
POM_DEVELOPER_URL=https://github.com/slackhq
POM_INCEPTION_YEAR=2022
VERSION_NAME=0.19.0-SNAPSHOT

circuit.mavenUrls.snapshots.sonatype=https://oss.sonatype.org/content/repositories/snapshots
circuit.mavenUrls.snapshots.sonatypes01=https://s01.oss.sonatype.org/content/repositories/snapshots
circuit.mavenUrls.snapshots.androidx=https://androidx.dev/snapshots/latest/artifacts/repository
circuit.mavenUrls.kotlinDev=https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev/
